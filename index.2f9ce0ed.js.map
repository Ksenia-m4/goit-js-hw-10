{"mappings":"AAQA,MAAMA,EAAWC,SAASC,cAAc,iBAClCC,EAAeF,SAASC,cAAc,aAE5CF,EAASI,iBAAiB,SAW1B,SAAkBC,GAChBC,EAAcC,QAAUF,EAAIG,OAAOC,MAEnCH,EACGI,kBACAC,MAAKC,GAAST,EAAaU,UAAyBD,EAKpDE,KACC,EAAGC,IAAKC,EAAGC,OAAEA,KACX,aAAaD,WAAaC,EAAO,GAAGC,yEAEpCD,EAAO,GAAGC,oCACMD,EAAO,GAAGE,oBAC3BF,EAAO,GAAGG,kDACeH,EAAO,GAAGI,gDACZJ,EAAO,GAAGK,kBAEnCC,KAAK,K,IA7BV,MAAMjB,EAAgB,ICTP,MAKbkB,cACE,OAAOC,MAAM,qHACVd,MAAKe,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,MAAM,IAEvBnB,MAAKC,GACGA,IAERmB,OAAMC,GAAOC,QAAQC,IAAIF,I,CAG9BtB,kBACE,OAAOe,MACL,sIAAyDU,KAAK5B,WAE7DI,MAAKe,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,MAAM,IAEvBnB,MAAKC,GACGA,IAERmB,OAAMC,GAAOC,QAAQC,IAAIF,I,CA/B9BI,cACED,KAAK5B,QAAU,E,GDSnBD,EAAckB,cAAcb,MAAKC,GAC/BA,EAAKyB,SAAQ,EAACC,GAAEA,EAAEpB,KAAEA,MAClB,IAAIqB,EAAY,IAAIC,OAAOtB,EAAMoB,GACjCtC,EAASyC,OAAOF,EAAU","sources":["src/index.js","src/cat-api.js"],"sourcesContent":["// Использовать ключ необходимо в HTTP-заголовке x-api-key. Рекомендуется использовать axios и добавить заголовок для всех запросов.\n\n// import axios from 'axios';\n// axios.defaults.baseURL = 'https://api.thecatapi.com/v1';\n// axios.defaults.headers.common['x-api-key'] =\n\nimport CatApiService from './cat-api';\n\nconst selectEl = document.querySelector('.breed-select');\nconst catContainer = document.querySelector('.cat-info');\n\nselectEl.addEventListener('input', onSelect);\n\nconst catApiService = new CatApiService();\n\ncatApiService.fetchBreeds().then(data =>\n  data.forEach(({ id, name }) => {\n    let newOption = new Option(name, id);\n    selectEl.append(newOption);\n  })\n);\n\nfunction onSelect(evt) {\n  catApiService.breedId = evt.target.value;\n\n  catApiService\n    .fetchCatByBreed()\n    .then(data => (catContainer.innerHTML = createMarkup(data)));\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ url: img, breeds }) =>\n        `<img src=\"${img}\" alt=\"${breeds[0].name}\" class=\"img\" width=\"500\" />\n<div class=\"text-container\">\n  <h2>${breeds[0].name}</h2>\n  <p class=\"subtitle\">${breeds[0].origin}</p>\n  <p>${breeds[0].description}</p>\n  <p><span>Temperament:</span>${breeds[0].temperament}</p>\n  <p><span>Life span:</span>${breeds[0].life_span}</p>`\n    )\n    .join('');\n}\n\n// Обработка состояния загрузки\n// Пока идет любой HTTP-запрос, необходимо показывать загрузчик - элемент p.loader. Пока запросов нет или когда запрос завершился, загрузчик необходимо скрывать. Используй для этого дополнительные CSS классы.\n\n// Пока идет запрос за списком пород, необходимо скрыть select.breed-select и показать p.loader.\n// Пока идет запрос за инфорацией о коте, необходимо скрыть div.cat-info и показать p.loader.\n// Когда любой запрос завершился, p.loader необходимо скрыть\n// Обработка ошибки\n// Если у пользователя произошла ошибка любого HTTP-запроса, например упала сеть, была потеря пакетов и т. п., то есть промис был отклонен, необходимо отобразить элемент p.error, а при каждом последующем запросе скрывать его. Используй для этого дополнительные CSS классы.\n\n// Протестировать работоспособноть отображения ошибки очень просто - измени адрес запроса добавив в конец любой символ, например вместо https://api.thecatapi.com/v1/breeds используй https://api.thecatapi.com/v1/breeds123. Запрос получения списка пород будет отклонен с ошибкой. Аналогично для запроса информации о коте по породе.\n","const BASE_URL = 'https://api.thecatapi.com/v1/';\nconst API_KEY =\n  'live_PdAupx8zeAfGwmA0Usl71dWW8CCCHLe1lcHgLH5IMiTqvWGKEfsMBKJmDkUjtR84';\n\nexport default class CatApiService {\n  constructor() {\n    this.breedId = '';\n  }\n\n  fetchBreeds() {\n    return fetch(`${BASE_URL}breeds?api_key=${API_KEY}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(err => console.log(err));\n  }\n\n  fetchCatByBreed() {\n    return fetch(\n      `${BASE_URL}images/search?api_key=${API_KEY}&breed_ids=${this.breedId}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(err => console.log(err));\n  }\n}\n"],"names":["$1f0dc3b9307be026$var$selectEl","document","querySelector","$1f0dc3b9307be026$var$catContainer","addEventListener","evt","$1f0dc3b9307be026$var$catApiService","breedId","target","value","fetchCatByBreed","then","data","innerHTML","map","url","img","breeds","name","origin","description","temperament","life_span","join","fetchBreeds","fetch","response","ok","Error","statusText","json","catch","err","console","log","this","constructor","forEach","id","newOption","Option","append"],"version":3,"file":"index.2f9ce0ed.js.map"}