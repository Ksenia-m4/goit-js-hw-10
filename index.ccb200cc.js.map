{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECRX,IAAMgB,EAAW,gCACXC,EACJ,wEAEaC,ECJZ,W,sBDIkBC,I,aAEjBC,KAAKC,QAAU,E,iBAGjBV,IAAA,c,MAAA,WACE,OAAOW,MAAM,GAA6BC,OAA1BP,EAAS,mBAAyBO,OAARN,IACvCO,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAEjBL,MAAK,SAAAM,GACJ,OAAOA,C,IAERC,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,OAG9BrB,IAAA,kB,MAAA,WACE,OAAOW,MACL,GAAoCC,OAAjCP,EAAS,0BAA6CO,OAArBN,EAAQ,eAA0BM,OAAbH,KAAKC,UAE7DG,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAEjBL,MAAK,SAAAM,GACJ,OAAOA,C,IAERC,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,UCpC7B,GCQGG,EAAWC,SAASC,cAAc,iBAClCC,EAAeF,SAASC,cAAc,aAE5CF,EAASI,iBAAiB,SAW1B,SAAkBC,GAChBC,EAAcpB,QAAUmB,EAAIrC,OAAON,MAEnC4C,EACGC,kBACAlB,MAAK,SAAAM,G,OAASQ,EAAaK,UAAyBb,EAKpDc,KACC,SAAAC,G,IAAGC,EAAQD,EAARE,IAAUC,EAAMH,EAANG,O,MACX,iCAA8CzB,OAAbuB,EAAI,WAEjCvB,OAF0CyB,EAAO,GAAGC,KAAK,0EAGzC1B,OADhByB,EAAO,GAAGC,KAAK,qCAEhB1B,OADiByB,EAAO,GAAGE,OAAO,mBAET3B,OADzByB,EAAO,GAAGG,YAAY,4CAEC5B,OADEyB,EAAO,GAAGI,YAAY,0CACJ7B,OAApByB,EAAO,GAAGK,UAAU,a,IAEjDC,KAAK,G,OA7BV,IAAMb,EAAgB,IAAIvB,EAE1BuB,EAAcc,cAAc/B,MAAK,SAAAM,G,OAC/BA,EAAK0B,SAAQ,SAAAX,G,IAAGY,EAAEZ,EAAFY,GAAIR,EAAIJ,EAAJI,KACdS,EAAY,IAAIC,OAAOV,EAAMQ,GACjCtB,EAASyB,OAAOF,E","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/cat-api.js","<<jsx-config-pragma.js>>","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const BASE_URL = 'https://api.thecatapi.com/v1/';\nconst API_KEY =\n  'live_PdAupx8zeAfGwmA0Usl71dWW8CCCHLe1lcHgLH5IMiTqvWGKEfsMBKJmDkUjtR84';\n\nexport default class CatApiService {\n  constructor() {\n    this.breedId = '';\n  }\n\n  fetchBreeds() {\n    return fetch(`${BASE_URL}breeds?api_key=${API_KEY}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(err => console.log(err));\n  }\n\n  fetchCatByBreed() {\n    return fetch(\n      `${BASE_URL}images/search?api_key=${API_KEY}&breed_ids=${this.breedId}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(err => console.log(err));\n  }\n}\n",null,"// Использовать ключ необходимо в HTTP-заголовке x-api-key. Рекомендуется использовать axios и добавить заголовок для всех запросов.\n\n// import axios from 'axios';\n// axios.defaults.baseURL = 'https://api.thecatapi.com/v1';\n// axios.defaults.headers.common['x-api-key'] =\n\nimport CatApiService from './cat-api';\n\nconst selectEl = document.querySelector('.breed-select');\nconst catContainer = document.querySelector('.cat-info');\n\nselectEl.addEventListener('input', onSelect);\n\nconst catApiService = new CatApiService();\n\ncatApiService.fetchBreeds().then(data =>\n  data.forEach(({ id, name }) => {\n    let newOption = new Option(name, id);\n    selectEl.append(newOption);\n  })\n);\n\nfunction onSelect(evt) {\n  catApiService.breedId = evt.target.value;\n\n  catApiService\n    .fetchCatByBreed()\n    .then(data => (catContainer.innerHTML = createMarkup(data)));\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ url: img, breeds }) =>\n        `<div class =\"thumb\"><img src=\"${img}\" alt=\"${breeds[0].name}\" class=\"img\" /></div>\n      <div class=\"text-container\">\n      <h2>${breeds[0].name}</h2>\n      <p class=\"subtitle\">${breeds[0].origin}</p>\n      <p>${breeds[0].description}</p>\n      <p><span>Temperament:</span>${breeds[0].temperament}</p>\n      <p><span>Life span:</span>${breeds[0].life_span} years</p>`\n    )\n    .join('');\n}\n\n// Обработка состояния загрузки\n// Пока идет любой HTTP-запрос, необходимо показывать загрузчик - элемент p.loader. Пока запросов нет или когда запрос завершился, загрузчик необходимо скрывать. Используй для этого дополнительные CSS классы.\n\n// Пока идет запрос за списком пород, необходимо скрыть select.breed-select и показать p.loader.\n// Пока идет запрос за инфорацией о коте, необходимо скрыть div.cat-info и показать p.loader.\n// Когда любой запрос завершился, p.loader необходимо скрыть\n// Обработка ошибки\n// Если у пользователя произошла ошибка любого HTTP-запроса, например упала сеть, была потеря пакетов и т. п., то есть промис был отклонен, необходимо отобразить элемент p.error, а при каждом последующем запросе скрывать его. Используй для этого дополнительные CSS классы.\n\n// Протестировать работоспособноть отображения ошибки очень просто - измени адрес запроса добавив в конец любой символ, например вместо https://api.thecatapi.com/v1/breeds используй https://api.thecatapi.com/v1/breeds123. Запрос получения списка пород будет отклонен с ошибкой. Аналогично для запроса информации о коте по породе.\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$ae0c329fb0fb36dc$var$BASE_URL","$ae0c329fb0fb36dc$var$API_KEY","$ae0c329fb0fb36dc$export$2e2bcd8739ae039","CatApiService","this","breedId","fetch","concat","then","response","ok","Error","statusText","json","data","catch","err","console","log","$b8f9b7833fa37166$var$selectEl","document","querySelector","$b8f9b7833fa37166$var$catContainer","addEventListener","evt","$b8f9b7833fa37166$var$catApiService","fetchCatByBreed","innerHTML","map","param","img","url","breeds","name","origin","description","temperament","life_span","join","fetchBreeds","forEach","id","newOption","Option","append"],"version":3,"file":"index.ccb200cc.js.map"}